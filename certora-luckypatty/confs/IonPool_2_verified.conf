{
    "files": [
        "src/IonPool.sol",
        "src/InterestRate.sol",
        "src/oracles/spot/WstEthSpotOracle.sol",
        "src/oracles/reserve/WstEthReserveOracle.sol",
        "src/Whitelist.sol",
        "src/YieldOracle.sol",
        "certora-luckypatty/helpers/ERC20A.sol",
        "certora-luckypatty/helpers/ERC20B.sol",
        "certora-luckypatty/harnesses/IonPoolHarness.sol"
    ],
    "verify": "IonPool:certora-luckypatty/specs/IonPool_2.spec",
    "rule": [
        "notAccureInterestWhenPaused",
        "setLastRateUpdateWhenUnpause",
        "lenderNotRedeemOtherPosition",
        "lenderRedeemOwnPosition",
        "lenderDepositForOthers"
    ],
    "loop_iter": "3",
    "parametric_contracts": ["IonPool"],
    "packages": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts"
    ],
    "link": [
        "InterestRate:YIELD_ORACLE=YieldOracle",
        "WstEthSpotOracle:RESERVE_ORACLE=WstEthReserveOracle"
    ],
    "prover_args": [
        //"-splitParallel true", // good for finding violations
        "-split false" // helps with proving rules
    ],
    "optimistic_fallback": true,
    // "smt_timeout": "3600", helps with proving rules
    "optimistic_loop": true,
    //"rule_sanity": "basic"
}